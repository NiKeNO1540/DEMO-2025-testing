#!/usr/bin/expect -f
#
# This Expect script was generated by autoexpect on Fri Sep  5 12:14:37 2025
# Expect and autoexpect were both written by Don Libes, NIST.
#
# Note that autoexpect does not guarantee a working script.  It
# necessarily has to guess about certain things.  Two reasons a script
# might fail are:
#
# 1) timing - A surprising number of programs (rn, ksh, zsh, telnet,
# etc.) and devices discard or ignore keystrokes that arrive "too
# quickly" after prompts.  If you find your new script hanging up at
# one spot, try adding a short sleep just before the previous send.
# Setting "force_conservative" to 1 (see below) makes Expect do this
# automatically - pausing briefly before sending each character.  This
# pacifies every program I know of.  The -c flag makes the script do
# this in the first place.  The -C flag allows you to define a
# character to toggle this mode off and on.

set force_conservative 0  ;# set to 1 to force conservative mode even if
			  ;# script wasn't run conservatively originally
if {$force_conservative} {
	set send_slow {1 .1}
	proc send {ignore arg} {
		sleep .1
		exp_send -s -- $arg
	}
}

#
# 2) differing output - Some programs produce different output each time
# they run.  The "date" command is an obvious example.  Another is
# ftp, if it produces throughput statistics at the end of a file
# transfer.  If this causes a problem, delete these patterns or replace
# them with wildcards.  An alternative is to use the -p flag (for
# "prompt") which makes Expect only look for the last line of output
# (i.e., the prompt).  The -P flag allows you to define a character to
# toggle this mode off and on.
#
# Read the man page for more info.
#
# -Don


set timeout -1
spawn sshpass -p admin ssh admin@172.16.1.5
match_max 100000
expect -exact "7\[r\[999;999H\[6n"
send -- "\[24;86R"
expect -exact "8\r
User Access Verification\r
\r
\r\r
EcoRouterOS version Camellia 14/05/2024 16:45:56\r
ecorouter>"
send -- "en\rconf t\rhostname br-rtr\rip domain-name au-team.irpo\r\rusername net_admin\rpassword P@ssw0rd\rrole admin\rexit\r\rntp timezone utc+5\r\rinterface int0\r	description \"to isp\"\r	ip address 172.16.5.5/28\r	exit\rport te0\r	service-instance te0/int0\r		encapsulation untagged\r		exit\r	exit\rinterface int0\r	connect port te0 service-instance te0/int0\r	exit\rinterface int1\r	description \"to isp\"\r	ip address 192.168.3.1/27\r	exit\rport te1\r	service-instance te1/int1\r		encapsulation untagged\r		exit\r	exit\rinterface int1\r	connect port te1 service-instance te1/int1\r	exit\rip route 0.0.0.0 0.0.0.0 172.16.5.1\r\rint tunnel.0\rip add 172.16.0.2/30\rip mtu 1400\rip tunnel 172.16.5.5 172.16.4.4 mode gre\rip ospf authentication-key ecorouter\rexit\r\rrouter ospf 1\rnetwork 172.16.0.0/30 area 0\rnetwork 192.168.3.0/27 area 0\rpassive-interface default\rno passive-interface tunnel.0\rarea 0 authentication\rexit\r\r\rint int1\r	ip nat inside\r	exit\rint int0\r	ip nat outside\r	exit\rip nat pool NAT_POOL 192.168.3.1-192.168.3.254\rip nat source dynamic inside-to-outside pool NAT_POOL overload interface int0\rexit\r\rwr\rexit\r "
expect eof
